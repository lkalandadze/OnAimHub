// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnAim.Admin.Infrasturcture.Persistance.Data;

#nullable disable

namespace OnAim.Admin.Infrasturcture.Migrations.ReadOnlyData
{
    [DbContext(typeof(ReadOnlyDataContext))]
    [Migration("20240923065550_CreateReadonlyUser")]
    partial class CreateReadonlyUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.ConsulLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Registration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConsulLogs");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasPlayed")
                        .HasColumnType("boolean");

                    b.Property<int?>("ReferrerId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerBalances");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DateBanned")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsPermanent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("RevokeDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerBans");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Log")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerLogTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PlayerLogTypeId");

                    b.ToTable("PlayerLogs");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerLogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerLogTypes");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("Progress")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerProgresses");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerProgressHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("Progress")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerProgressHistories");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddedByUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("SegmentId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SegmentId");

                    b.ToTable("PlayerSegments");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.ReferralDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReferralId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferralPrizeCurrencyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferralPrizeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReferralPrizeValue")
                        .HasColumnType("integer");

                    b.Property<int>("ReferrerId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferrerPrizeCurrencyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferrerPrizeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReferrerPrizeValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.HasIndex("ReferralPrizeCurrencyId");

                    b.HasIndex("ReferrerId");

                    b.HasIndex("ReferrerPrizeCurrencyId");

                    b.ToTable("ReferralDistributions");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Segment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.TokenRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("AccessTokenExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TokenRecords");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<int>("FromAccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("ToAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FromAccountId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ToAccountId");

                    b.HasIndex("TypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.TransactionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionStatuses");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerBalance", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany("PlayerBalances")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerBan", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerLog", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.PlayerLogType", "PlayerLogType")
                        .WithMany()
                        .HasForeignKey("PlayerLogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("PlayerLogType");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerProgress", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerProgressHistory", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.PlayerSegment", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany("PlayerSegments")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Segment", "Segment")
                        .WithMany("PlayerSegments")
                        .HasForeignKey("SegmentId");

                    b.Navigation("Player");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.ReferralDistribution", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Referral")
                        .WithMany()
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "ReferralPrizeCurrency")
                        .WithMany()
                        .HasForeignKey("ReferralPrizeCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Referrer")
                        .WithMany()
                        .HasForeignKey("ReferrerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "ReferrerPrizeCurrency")
                        .WithMany()
                        .HasForeignKey("ReferrerPrizeCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");

                    b.Navigation("ReferralPrizeCurrency");

                    b.Navigation("Referrer");

                    b.Navigation("ReferrerPrizeCurrency");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Transaction", b =>
                {
                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.AccountType", "FromAccount")
                        .WithMany()
                        .HasForeignKey("FromAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.TransactionStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.AccountType", "ToAccount")
                        .WithMany()
                        .HasForeignKey("ToAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnAim.Admin.Infrasturcture.HubEntities.TransactionType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("FromAccount");

                    b.Navigation("Game");

                    b.Navigation("Player");

                    b.Navigation("Status");

                    b.Navigation("ToAccount");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Player", b =>
                {
                    b.Navigation("PlayerBalances");

                    b.Navigation("PlayerSegments");
                });

            modelBuilder.Entity("OnAim.Admin.Infrasturcture.HubEntities.Segment", b =>
                {
                    b.Navigation("PlayerSegments");
                });
#pragma warning restore 612, 618
        }
    }
}
