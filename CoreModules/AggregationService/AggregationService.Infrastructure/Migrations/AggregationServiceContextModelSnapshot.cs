// <auto-generated />
using System;
using AggregationService.Infrastructure.Persistance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AggregationService.Infrastructure.Migrations
{
    [DbContext(typeof(AggregationServiceContext))]
    partial class AggregationServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AggregationService.Domain.Entities.AggregationConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("AggregationSubscriber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AggregationType")
                        .HasColumnType("integer");

                    b.Property<int>("EvaluationType")
                        .HasColumnType("integer");

                    b.Property<string>("EventProducer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PromotionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SelectionField")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AggregationConfigurations");
                });

            modelBuilder.Entity("AggregationService.Domain.Entities.PointEvaluationRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AggregationConfigurationId")
                        .HasColumnType("text");

                    b.Property<int>("Point")
                        .HasColumnType("integer");

                    b.Property<int>("Step")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AggregationConfigurationId");

                    b.ToTable("PointEvaluationRules");
                });

            modelBuilder.Entity("Filter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("AggregationConfigurationId")
                        .HasColumnType("text");

                    b.Property<int>("Operator")
                        .HasColumnType("integer");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AggregationConfigurationId");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("AggregationService.Domain.Entities.PointEvaluationRule", b =>
                {
                    b.HasOne("AggregationService.Domain.Entities.AggregationConfiguration", null)
                        .WithMany("PointEvaluationRules")
                        .HasForeignKey("AggregationConfigurationId");
                });

            modelBuilder.Entity("Filter", b =>
                {
                    b.HasOne("AggregationService.Domain.Entities.AggregationConfiguration", null)
                        .WithMany("Filters")
                        .HasForeignKey("AggregationConfigurationId");
                });

            modelBuilder.Entity("AggregationService.Domain.Entities.AggregationConfiguration", b =>
                {
                    b.Navigation("Filters");

                    b.Navigation("PointEvaluationRules");
                });
#pragma warning restore 612, 618
        }
    }
}
