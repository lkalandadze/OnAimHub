stages:
  - build
  - test
  - tagged_latest
  - deploy

variables:
  DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
  DOCKER_NAMESPACE: gvgroup
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:dind

before_script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin


build_MissionService:
  stage: build
  script:
    - echo "Building  MissionService"
    - docker build -t $DOCKER_NAMESPACE/onaim-missionservice:$DOCKER_IMAGE_TAG -f CoreModules/MissionService/MissionService.Api/Dockerfile .
    - echo "Pushing Docker image for onaim-missionservice to Docker Hub..."
    - docker push $DOCKER_NAMESPACE/onaim-missionservice:$DOCKER_IMAGE_TAG
  tags:
    - docker-runner

# test_MissionService:
#   stage: test
#   script:
#     - echo "Running tests for MissionService"
#   tags:
#     - docker-runner

tagged_latest_MissionService:
  stage: tagged_latest
  script:
    - echo "Pushing MissionService"
    - docker pull $DOCKER_NAMESPACE/onaim-missionservice:$DOCKER_IMAGE_TAG
    - docker tag $DOCKER_NAMESPACE/onaim-missionservice:$DOCKER_IMAGE_TAG $DOCKER_NAMESPACE/onaim-missionservice:latest
    - docker push $DOCKER_NAMESPACE/onaim-missionservice:latest
  tags:
    - docker-runner
  only:
    - main
  needs:
    - build_MissionService
  when: manual

deploy_MissionService:
  stage: deploy
  script:
    - echo "Deploying MissionService to Kubernetes"
    - kubectl config use-context onaim/onaimback/k8s-connection:k8s-connection
    - kubectl apply -f CoreModules/MissionService/missionapi-k8s/missionapi-deployment.yaml -f CoreModules/MissionService/missionapi-k8s/missionapi-service.yaml -f CoreModules/MissionService/missionapi-k8s/missionapi-ingress.yaml -f CoreModules/MissionService/missionapi-k8s/missionapi-cm0-configmap.yaml -f CoreModules/MissionService/missionapi-k8s/secret.yaml
  only:
    - main
  when: manual
  tags:
    - docker-runner