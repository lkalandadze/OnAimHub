// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wheel.Infrastructure.DataAccess;

#nullable disable

namespace Wheel.Infrastructure.Migrations
{
    [DbContext(typeof(WheelConfigDbContext))]
    [Migration("20250128111035_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameLib.Domain.Entities.GameSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.LimitedPrizeCountsByPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PrizeId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("PlayerId", "PrizeId");

                    b.ToTable("LimitedPrizeCountsByPlayer");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoinId")
                        .HasColumnType("text");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.Property<int?>("WheelConfigurationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WheelConfigurationId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FromTemplateId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GameConfigurations");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoinId")
                        .HasColumnType("text");

                    b.Property<int?>("GlobalLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("GlobalSetLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PerPlayerLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("PerPlayerSetLimit")
                        .HasColumnType("integer");

                    b.Property<int>("PrizeGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Probability")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingGlobalLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingGlobalSetLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("SetSize")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.Property<int?>("WheelIndex")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrizeGroupId");

                    b.ToTable("WheelPrizes");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelPrizeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NextPrizeIndex")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Sequence")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("WheelPrizeGroups");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.Price", b =>
                {
                    b.HasOne("Wheel.Domain.Entities.WheelConfiguration", null)
                        .WithMany("Prices")
                        .HasForeignKey("WheelConfigurationId");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelPrize", b =>
                {
                    b.HasOne("Wheel.Domain.Entities.WheelPrizeGroup", "PrizeGroup")
                        .WithMany("Prizes")
                        .HasForeignKey("PrizeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrizeGroup");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelPrizeGroup", b =>
                {
                    b.HasOne("Wheel.Domain.Entities.WheelConfiguration", "Configuration")
                        .WithMany("WheelPrizeGroups")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelConfiguration", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("WheelPrizeGroups");
                });

            modelBuilder.Entity("Wheel.Domain.Entities.WheelPrizeGroup", b =>
                {
                    b.Navigation("Prizes");
                });
#pragma warning restore 612, 618
        }
    }
}
