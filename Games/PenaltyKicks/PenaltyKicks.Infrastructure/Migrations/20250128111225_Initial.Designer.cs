// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PenaltyKicks.Infrastructure.DataAccess;

#nullable disable

namespace PenaltyKicks.Infrastructure.Migrations
{
    [DbContext(typeof(PenaltyConfigDbContext))]
    [Migration("20250128111225_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameLib.Domain.Entities.GameSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.LimitedPrizeCountsByPlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PrizeId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("PlayerId", "PrizeId");

                    b.ToTable("LimitedPrizeCountsByPlayer");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoinId")
                        .HasColumnType("text");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("numeric");

                    b.Property<int?>("PenaltyConfigurationId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PenaltyConfigurationId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FromTemplateId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("KicksCount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GameConfigurations");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BetPriceId")
                        .HasColumnType("integer");

                    b.Property<string>("CoinId")
                        .HasColumnType("text");

                    b.Property<int>("CurrentKickIndex")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GameState")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean");

                    b.Property<List<bool>>("KickSequence")
                        .HasColumnType("boolean[]");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("numeric");

                    b.Property<int>("PrizeId")
                        .HasColumnType("integer");

                    b.Property<int>("PrizeValue")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PenaltyGame");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoinId")
                        .HasColumnType("text");

                    b.Property<int?>("GlobalLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("GlobalSetLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PerPlayerLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("PerPlayerSetLimit")
                        .HasColumnType("integer");

                    b.Property<int>("PrizeGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Probability")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingGlobalLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingGlobalSetLimit")
                        .HasColumnType("integer");

                    b.Property<int?>("SetSize")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrizeGroupId");

                    b.ToTable("PenaltyPrizes");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyPrizeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NextPrizeIndex")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Sequence")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("PenaltyPrizeGroups");
                });

            modelBuilder.Entity("GameLib.Domain.Entities.Price", b =>
                {
                    b.HasOne("PenaltyKicks.Domain.Entities.PenaltyConfiguration", null)
                        .WithMany("Prices")
                        .HasForeignKey("PenaltyConfigurationId");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyPrize", b =>
                {
                    b.HasOne("PenaltyKicks.Domain.Entities.PenaltyPrizeGroup", "PrizeGroup")
                        .WithMany("Prizes")
                        .HasForeignKey("PrizeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrizeGroup");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyPrizeGroup", b =>
                {
                    b.HasOne("PenaltyKicks.Domain.Entities.PenaltyConfiguration", "Configuration")
                        .WithMany("PenaltyPrizeGroups")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyConfiguration", b =>
                {
                    b.Navigation("PenaltyPrizeGroups");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("PenaltyKicks.Domain.Entities.PenaltyPrizeGroup", b =>
                {
                    b.Navigation("Prizes");
                });
#pragma warning restore 612, 618
        }
    }
}
